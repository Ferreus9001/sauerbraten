// File:		permstats.cfg
// Author:		FerreusRemedium
// Created:		2013-03-13
// Last Change: 2013-03-14

createine = [ if (=s (getalias $arg1) "") [ $arg1 = $arg2 ] ]

_ps_list_counters = "Frags: Deaths: Flags: Damage: Shots: Tks: Suicides: Time:"
_ps_list_counters_getters = "getfrags getdeaths getflags gettotaldamage gettotalshots _ps_gettks _ps_getsuicides _ps_gettime"
_ps_list_counters_displayers = ". . . . . . . _ps_getstrtime"
_ps_list_specials = "Accuracy: KpD:"
_ps_list_specials_methods = "_ps_calcaccuracy _ps_calckpd"
_ps_list_filters = "ffa team . normal . insta . effic . ctf . capture . regen . protect . collect . hold mp sp"
_ps_list_filters_checks = "m_teammode _ps_m_normal m_insta m_efficiency m_ctf m_capture m_regencapture m_protect m_collect m_hold m_sp"
// NOTE coop is left out
_ps_list_modes = "-3 -2 0 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22"
_ps_list_modes_names = "sp dmsp ffa teamplay instagib instateam effic efficteam tactics tacteam capture regen ctf instactf protect instaprotect hold instahold efficctf efficprotect effichold collect instacollect efficcollect"
// gametypes: ffa teamplay ctf protect hold collect
// gamemodes: items insta effic
// uniquemodes: tactics tacteam capture regen

_ps_m_normal = [ result (&& [! (m_insta $arg1)] [! (m_efficiency $arg1)]) ]

createine _ps_last_isconnected (isconnected)
createine _ps_last_mode (getmode)
createine _ps_last_mapname (mapname)
createine _ps_last_timeremaining (timeremaining)
createine _ps_last_deaths (getdeaths)

createine _ps_current_tks 0
createine _ps_current_suicides 0

_ps_pollinterval = 100
_ps_tkpollinterval = 20

// TODO do not count frags from before leaving a server TEST

// stop already running versions
// TODO doesn't count if tked and suicided at the same time TEST
_ps_polltksd = []
sleep (* 2 $_ps_tkpollinterval) [
	// polls frags and deaths to count tks
	_ps_polltksd = [
		sleep $_ps_tkpollinterval [
			do [
				local fcmp
				fcmp = (- @@(getfrags) (getfrags))
				if (> $fcmp 0) [
					local dcmp
					dcmp = (- (getdeaths) @@@(getdeaths))
					echo fcmp= $fcmp dcmp= $dcmp
					if (>= $dcmp 0) [
						+= _ps_current_suicides $dcmp
						+= _ps_current_tks (- $fcmp $dcmp)
						_ps_addstats START (indexof $_ps_list_counters_getters "getfrags") (- 0 $fcmp)
						echo suicides: $_ps_current_suicides  tks: $_ps_current_tks
					]
				]
			]
			//if (< (getfrags) @(getfrags)) [
				//local cmp
				//cmp = (- (getdeaths) @@(getdeaths))
				//if (= $cmp 0) [
					//+= _ps_current_tks (- @@@(getfrags) (getfrags))
					//echo tks $_ps_current_tks
				//] [
					//if (> $cmp 0) [
						//+= _ps_current_suicides 1
						//echo suicides: $_ps_current_suicides
					//]
				//]
			//]
			_ps_polltksd
		]
	]
	_ps_polltksd
]

// ===============
// Special getters
// ===============

// returns tks counted by _ps_polltksd
_ps_gettks = [
	result $_ps_current_tks
]
// returns suicides counted by _ps_polltksd
_ps_getsuicides = [
	result $_ps_current_suicides
]

_ps_gettime = [
	if (isconnected) [result (- 0 (timeremaining))] [result 0]
]

_ps_zeros = [
	result (concatword (? (< $arg1 10) 0) $arg1)
]

// /_ps_getstrtimesub <SECONDS> <SUFFIX> <MOD> <DIV>
_ps_getstrtimesub = [
	local s
	if (< $arg1 $arg4) [
		result ""
	] [
		if $arg3 [
			if (> $arg1 (* $arg3 $arg4)) [
				s = (concatword (_ps_zeros (mod (div $arg1 $arg4) $arg3)))
			] [
				s = (concatword (mod (div $arg1 $arg4) $arg3))
			]
		] [
			s = (concatword (div $arg1 $arg4))
		]
		result (concatword $s $arg2)
	]
]

_ps_getstrtime = [
	if $arg1 [
		result (concatword (_ps_getstrtimesub $arg1 "h" 0 3600) (_ps_getstrtimesub $arg1 "m" 60 60) (_ps_getstrtimesub $arg1 "s" 60 1))
	] [
		result -
	]
]

+= = [ $arg1 = (+ (getalias $arg1) $arg2); result $$arg1 ]
++ = [ $arg1 = (+ (getalias $arg1) 1); result $$arg1 ]

// /_ps_getcountername <MODE> <COUNTER>
// <MODE> TMP or the gamemode id
// <COUNTER> Name/index of the counter
_ps_getcountername = [
	result (concatword _ps_stats_ $arg1 _ $arg2)
]

_ps_addstats = [
	//local varname
	//varname = (_ps_getcountername $arg1 $arg2)
	//if (|| $arg3 (getalias $varname)) [
		//+= $varname $arg3
	if $arg3 [
		+= (_ps_getcountername $arg1 $arg2) $arg3
	]
]

_ps_setstats = [
	local varname
	varname = (_ps_getcountername $arg1 $arg2)
	if (|| $arg3 (getalias $varname)) [
		$varname = $arg3
	]
]

// /_ps_getstats <MODE> <COUNTER>
// same args as /_ps_getcountername
// returns value of a counter or 0 if it does not exist yet
_ps_getstats = [
	result (|| (getalias (_ps_getcountername $arg1 $arg2)) 0)
]

// checks whether the last game has ended
_ps_changedgame = [
	result (|| [|| [!= (isconnected) $_ps_last_isconnected] [> (timeremaining) $_ps_last_timeremaining]] [|| [< (getdeaths) $_ps_last_deaths] [!=s $mapname $_ps_last_mapname]])
]

// saves information about current match for /_ps_changedgame
_ps_savegameinfo = [
	_ps_last_isconnected = (isconnected)
	_ps_last_mode = (getmode)
	_ps_last_mapname = (mapname)
	_ps_last_timeremaining = (timeremaining)
	_ps_last_deaths = (getdeaths)
]

// adds temporary counters to permanent counters
_ps_apply = [
	local addit
	addit = (>= (indexof $_ps_list_modes $_ps_last_mode) 0)
	echo addig= $addit mode= $_ps_last_mode
	loop i (listlen $_ps_list_counters_getters) [
		if $addit [
			_ps_addstats $_ps_last_mode $i (- (_ps_getstats TMP $i) (_ps_getstats START $i))
			echo _ps_addstats $_ps_last_mode $i "(-" (_ps_getstats TMP $i) (_ps_getstats START $i)")"
		]
		_ps_setstats TMP $i 0
		_ps_setstats START $i 0
	]
]

// /_ps_apply_tmp <TAG>
// saves current match stats to temporary vars
// TAG: TMP or START
_ps_apply_tmp = [
	local getter i
	i = 0
	looplist getter $_ps_list_counters_getters [
		_ps_setstats $arg1 $i ($getter)
		++ i
	]
	//loop i (listlen $_ps_list_counters_getters) [
		//_ps_setstats $arg1 $i ((at $_ps_list_counters_getters $i))
	//]
]

// resets all temporary counters
_ps_reset_tmp = [
	loop i (listlen $_ps_list_counters_getters) [
		_ps_setstats TMP $i 0
		_ps_setstats START $i 0
	]
]

// stop already running versions
_ps_pollstatsd = []
sleep (* 2 $_ps_pollinterval) [
	_ps_pollstatsd = [
		if (_ps_changedgame) [
			echo "round ended"
			_ps_apply
			_ps_current_tks = 0
			_ps_current_suicides = 0
			_ps_updategui
			_ps_apply_tmp START
		]
		_ps_savegameinfo
		_ps_apply_tmp TMP
		sleep $_ps_pollinterval [ _ps_pollstatsd ]
	]
	_ps_pollstatsd
]

// calc methods

_ps_round = [
	if (>= $arg1 0) [
		result (+ (+f $arg1 0.5) 0)
	] [
		result (+ (-f $arg1 0.5) 0)
	]
]

_ps_calcaccuracy = [
	local damage shots
	damage = (at $arg1 (indexof $_ps_list_counters_getters "gettotaldamage"))
	if $damage [
		shots = (at $arg1 (indexof $_ps_list_counters_getters "gettotalshots"))
		result (concatword (_ps_round (*f (divf $damage $shots) 100)) "%")
	] [
		result -
	]
]

_ps_calckpd = [
	local frags deaths
	frags = (at $arg1 (indexof $_ps_list_counters_getters "getfrags"))
	if $frags [
		deaths = (at $arg1 (indexof $_ps_list_counters_getters "getdeaths"))
		result (divf (_ps_round (*f (divf $frags (max $deaths 1)) 100)) 100)
	] [
		result -
	]
]

// GUI stuff

// main gui
newgui _ps_main [
	guibutton "total" [showgui _ps_total]
	guibutton "filtered" [showgui _ps_filtered]
] "permstats"

// total stats gui
newgui _ps_total [
	local total
	loop c (listlen $_ps_list_counters) [
		guilist [
			guitext (at $_ps_list_counters $c)
			total = 0
			looplist m $_ps_list_modes [
				+= total (_ps_getstats $m $c)
			]
			guitext $total
		]
	]
] "total"

_ps_getfiltervarname = [
	result (concatword _ps_filter_ $arg1 _ $arg2)
]

_ps_guifilter = [
	local ctrls both falsetext truetext
	falsetext = (at $_ps_list_filters (<< $arg1 1))
	truetext = (at $_ps_list_filters (+ (<< $arg1 1) 1))
	createine (_ps_getfiltervarname $arg1 0) 0
	createine (_ps_getfiltervarname $arg1 1) 0

	ctrls = [guicheckbox "enable" @(_ps_getfiltervarname $arg1 0) 1 0 [_ps_updategui]]
	if (&& [!=s $truetext "."] [!=s $falsetext "."]) [
		ctrls = (concat $ctrls [
			guiradio @falsetext @(_ps_getfiltervarname $arg1 1) 0 [
				(_ps_getfiltervarname @@arg1 0) = 1
				_ps_updategui
			]
			guiradio @truetext @(_ps_getfiltervarname $arg1 1) 1 [
				(_ps_getfiltervarname @@arg1 0) = 1
				_ps_updategui
			]
		])
	] [
		if (!=s $falsetext ".") [
			ctrls = (concat $ctrls [
				guicheckbox @falsetext @(_ps_getfiltervarname $arg1 1) 0 1 [
					(_ps_getfiltervarname @@arg1 0) = 1
					_ps_updategui
				]
			])
		]
		if (!=s $truetext ".") [
			ctrls = (concat $ctrls [
				guicheckbox @truetext @(_ps_getfiltervarname $arg1 1) 1 0 [
					(_ps_getfiltervarname @@arg1 0) = 1
					_ps_updategui
				]
			])
		]
	]
	result $ctrls
]
_ps_guifiltercontrols = [
	result (loopconcat c (listlen $_ps_list_filters_checks) [
		result [guilist [ @@(_ps_guifilter $c) ];]
	])
]

// _ps_gettotalfiltered <COUNTER>
// returns total value of COUNTER filtered by gui controls
_ps_gettotalfiltered = [
	local useit total
	looplist m $_ps_list_modes [
		useit = 1
		if $_ps_filter_enabled [
			loop i (listlen $_ps_list_filters_checks) [
				if $useit [
					if $(_ps_getfiltervarname $i 0) [
						useit = (= $(_ps_getfiltervarname $i 1) ((at $_ps_list_filters_checks $i) $m))
					]
				]
			]
		]
		if $useit [
			// TODO add current stats if (= $m (getmode))
			// derp, gui does not get updated (yet)
			if (= $m (getmode)) [
				+= total (- (_ps_getstats TMP $arg1) (_ps_getstats START $arg1))
			]
			+= total (_ps_getstats $m $arg1)
		]
	]
	result (|| $total 0)
]

_ps_guistatscontrols = [
	local . s ctrls i varname list @(loopconcat c (listlen $_ps_list_counters) [result (concatword total_ $c)])
	. = [if (&& [!= $arg1 0] [!=s $arg1 ""]) [ result $arg1 ] [ result - ]] // dummy function
	ctrls = (loopconcat c (listlen $_ps_list_counters) [
		varname = (concatword total_ $c)
		$varname = (_ps_gettotalfiltered $c)
		result [guilist [
			guitext @@(at $_ps_list_counters $c) 0
			guispring
			guitext @@(concatword "^"" ((at $_ps_list_counters_displayers $c) $$varname) "^"") 0
		];]
			//@@(if $$varname [result [guitext @(result $$varname) 0]])
	])

	ctrls = (concat $ctrls (loopconcat i (listlen $_ps_list_specials) [
		if (=s (getalias list) "") [
			list = (loopconcat c (listlen $_ps_list_counters) [
				result $(concatword total_ $c)
			])
		]
		s = ((at $_ps_list_specials_methods $i) $list)
		result [guilist [
			guitext @@(at $_ps_list_specials $i) 0
			guispring
			guitext @@(concatword "^"" (if (!=s $s "") [result $s] [result -]) "^"") 0
		];]
	]))
	result $ctrls
]

createine _ps_filter_enabled 0
_ps_creategui = [
	result [
		guionclear [echo guivisible=0]
		guilist [
			guispring
			guicheckbox "filter" _ps_filter_enabled 1 0 [_ps_updategui]
			guispring
		]
		guilist [
			@@(if $_ps_filter_enabled [
				result [
					guilist [
						@@(_ps_guifiltercontrols)
					]
					guibar
				]
			] [
				result ""
			])
			guilist [
				guistrut 14 1
				@@@(_ps_guistatscontrols)
			]
		]
	]
]
// filtered total stats gui
_ps_updategui = [
	newgui _ps_filtered (_ps_creategui) "permstats" [echo guivisible=1]
]
_ps_updategui

// show the gui
permstats = [ showgui _ps_filtered ]

// vim:set sw=4 ts=4 sts=0 noet sta sr ft=cube fdm=syntax:
